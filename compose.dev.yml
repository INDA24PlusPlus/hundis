services:
  caddy:
    image: caddy:latest
    ports:
      - "8000:8000"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - frontend
      - backend
    command: caddy run --config /etc/caddy/Caddyfile --watch
  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3333:3333"
    networks:
      - frontend
    volumes:
      - ./frontend:/usr/src/app
      - node_modules:/usr/src/app/node_modules
  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile.dev
    environment:
      - BASE_URL=http://localhost:8000
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=postgres
      - DB_USER=postgres
      - DB_PASSWORD=password
      - GITHUB_CLIENT_ID=INSERT_GITHUB_CLIENT_ID_HERE
      - GITHUB_CLIENT_SECRET=INSERT_GITHUB_CLIENT_SECRET_HERE
      - JWT_SECRET=this_is_a_very_secret_secret_dev
    volumes:
      - ./backend:/app
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend
  postgres:
    image: postgres:latest
    user: postgres
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    healthcheck:
      test: ["CMD", "pg_isready"]
      interval: 2s
      timeout: 10s
      retries: 5
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend
  pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
      MASTER_PASSWORD_REQUIRED: 'False'
    volumes:
       - pgadmin:/var/lib/pgadmin
    ports:
      - "8080:80"
    networks:
      - backend

  minio:
    image: minio/minio
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: adminadmin
    volumes:
      - minio:/data
    ports:
      # - "9000:9000"
      - "9001:9001"
    healthcheck:
      test: "mc ready local"
      interval: 2s
      timeout: 10s
      retries: 5
    entrypoint: ["sh", "-c", "minio server /data --console-address ':9001'"]
    networks:
      - backend

  createbuckets:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      mc alias set myminio http://minio:9000 admin adminadmin;
      mc admin user add myminio hundis Gm4q2UZsGqrKwyZIMaZDKUu7lfoVKjR8Yn8XuPdl;
      mc admin policy attach myminio readwrite --user hundis;
      mc mb myminio/test-bucket;
      exit 0;
      "
    networks:
      - backend

volumes:
  caddy_data:
  caddy_config:
  node_modules:
  pgdata:
  pgadmin:
  minio:

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge